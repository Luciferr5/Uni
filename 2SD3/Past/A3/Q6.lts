const N = 3
set M = {msg}
set S = {[M], [M] [M]}

PORT = (send[x:M] -> PORT[x]),
PORT [y:M] = (send[x:M] -> PORT[x][y] | receive[y] -> PORT),
PORT[z:S][y:M] = (send[x:M] -> PORT[x][z][y] | receive[y] -> PORT[z]).

PRODUCER = (empty.receive.token -> dest.send.msg -> PRODUCER).

CONSUMER = SENDBUF[N],
SENDBUF[i:1..N] = (empty.send.token -> if (i == 1) then CONTINUE else SENDBUF[i-1]),
CONTINUE = (dest.receive.msg -> empty.send.token -> CONTINUE).

||PROCON = (PRODUCER || CONSUMER || empty:PORT || dest: PORT)
         	/{empty.[i:{send,receive}].token/empty[i].msg}.